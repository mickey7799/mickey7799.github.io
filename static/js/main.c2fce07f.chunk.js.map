{"version":3,"sources":["components/Sidebar.js","components/Header/styles.js","contexts/infoContext.js","components/Header/Header.js","components/MobileNav/styles.js","components/MobileNav/MobileNav.js","components/Layout/Layout.js","styles.js","pages/Me.js","components/ProjectCard.js","pages/Projects.js","pages/Work.js","pages/Education.js","components/Loader.js","pages/Pages.js","App.js","serviceWorker.js","index.js"],"names":["StyledSideNav","styled","SideNav","StyledSideNavItems","SideNavItems","items","name","path","Sidebar","location","useLocation","isFixedNav","expanded","isChildOfHeader","aria-label","map","i","isActive","pathname","element","Link","to","key","HeaderContainer","div","isHome","MainHeader","Image","img","ViewResumeLink","a","InfoContext","createContext","InfoContextProvider","props","useState","info","setInfo","useEffect","fetch","then","res","json","user","console","log","Provider","value","children","Header","useContext","src","basics","picture","href","username","target","rel","label","region","headline","Container","Spacer","NavWrapper","NavLink","NavButton","Button","MobileNav","hasIconOnly","renderIcon","User32","iconDescription","tooltipPosition","Code32","Portfolio32","Education32","StyledContent","Content","Layout","SectionTitle","h3","Paragraph","p","Pill","span","red","white","ProfileLink","li","Me","summary","skills","skill","profiles","profile","network","url","Card","TitleBox","Title","Wrapper","TitleBack","Commnet","SkillContainer","SkillTag","DemoLink","Des","Img","ProjectCard","image","languages","libraries","githubUrl","website","isfront","setBack","flipCard","onClick","toUpperCase","onMouseLeave","item","j","alt","Projects","projects","project","images","resolutions","desktop","WorkItem","WorkTitle","h4","JobTitle","JobDescription","Work","work","position","company","start","year","month","end","highlights","highlight","EducationItem","Institution","Degree","Education","education","institution","studyType","area","description","replace","Loader","className","Pages","basename","process","exact","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c2fce07f.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { SideNav } from 'carbon-components-react/lib/components/UIShell'\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { SideNavItems, SideNavLink } from 'carbon-components-react/lib/components/UIShell';\n\n\nexport const StyledSideNav = styled(SideNav)`\n  @media (max-width: 640px) {\n    display: none;\n  }\n`\n\nexport const StyledSideNavItems = styled(SideNavItems)`\n  margin-top: 1rem;\n`\n\n\nconst items = [\n    { name: 'About', path: '/' },\n    { name: 'Projects', path: '/projects' },\n    { name: 'Work', path: '/work' },\n    { name: 'Education', path: '/education' },\n];\n\nconst Sidebar = () => {\n    const location = useLocation();\n\n    return (\n        <StyledSideNav isFixedNav expanded isChildOfHeader={false} aria-label=\"Side navigation\">\n            <StyledSideNavItems>\n                {items.map(i => (\n                    <SideNavLink\n                        isActive={\n                            location.pathname === '/' && i.path === '/' ? true : location.pathname === i.path\n                        }\n                        element={Link}\n                        to={i.path}\n                        key={i.name}\n                    >\n                        {i.name}\n                    </SideNavLink>\n                ))}\n            </StyledSideNavItems>\n        </StyledSideNav>\n    );\n};\n\nexport default Sidebar;","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media (max-width: 640px) {\n    display: ${({ isHome }) => (!isHome ? 'none' : 'flex')};\n    flex-direction: column;\n  }\n`;\n\nexport const MainHeader = styled.div`\n  display: flex;\n  @media (max-width: 640px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n  margin-right: 1rem;\n  border-radius: 2px;\n`;\n\nexport const ViewResumeLink = styled.a`\n  display: flex;\n  text-decoration: none;\n  padding: 0.75rem 1.5rem;\n  font-weight: bold;\n  align-items: center;\n  margin-top: 1rem;\n  background-color: #FF7417;\n  transition: background-color 250ms ease;\n  &:hover {\n    background-color: #2ecc40;\n  }\n  svg {\n    fill: white;\n    margin-left: 8px;\n  }\n`;\n\n","import React, { createContext, useState, useEffect } from \"react\";\nexport const InfoContext = createContext();\n\nconst InfoContextProvider = props => {\n    const [info, setInfo] = useState(null);\n\n    useEffect(() => {\n        fetch('https://gitconnected.com/v1/portfolio/mickey7799')\n            .then(res => res.json())\n            .then(user => {\n                console.log(user);\n                setInfo(user);\n            });\n    }, []);\n    \n    return (\n        <InfoContext.Provider value={{info}}>\n            {props.children}\n        </InfoContext.Provider>\n    );\n};\n\nexport default InfoContextProvider;","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ArrowRight16 } from '@carbon/icons-react';\n\nimport { HeaderContainer, MainHeader, Image, ViewResumeLink } from './styles';\nimport { InfoContext } from '../../contexts/infoContext';\n\nconst Header = () => {\n\n  const { info } = useContext(InfoContext);\n  const location = useLocation();\n\n  return (\n    \n    <HeaderContainer isHome={location.pathname === '/'}>\n      <MainHeader>\n        <Image src={info.basics.picture} />\n        <div>\n          <h2>{info.basics.name}</h2>\n          <h4>\n            <a\n              href={`https://gitconnected.com/${info.basics.username}`}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              @{info.basics.username}\n            </a>\n          </h4>\n          <p>{info.basics.label}</p>\n          <p>{info.basics.region}</p>\n          <p>{info.basics.headline}</p>\n          \n        </div>\n      </MainHeader>\n      <div>\n\n        <ViewResumeLink\n          href={`https://gitconnected.com/${info.basics.username}/resume`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <span>View Resume</span>\n          <ArrowRight16 />\n\n        </ViewResumeLink>\n      </div>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Button from 'carbon-components-react/lib/components/Button';\n\nexport const Container = styled.div`\n  display: none;\n  @media (max-width: 640px) {\n    display: block;\n  }\n`;\n\nexport const Spacer = styled.div`\n  height: 48px;\n`;\n\nexport const NavWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  width: 100vw;\n  top: 0;\n  left: 0;\n`;\n\nexport const NavLink = styled(Link)`\n  width: 25%;\n`;\n\nexport const NavButton = styled(Button)`\n  width: 100%;\n  justify-content: center;\n`;","import React from 'react'\nimport { User32, Code32, Portfolio32, Education32 } from '@carbon/icons-react'\n\nimport { Container, Spacer, NavWrapper, NavButton, NavLink } from './styles'\n\nconst MobileNav = () => {\n  \n  return (\n    <Container>\n      <Spacer />\n      <NavWrapper>\n\n        <NavLink to=\"/\">\n          <NavButton\n            hasIconOnly\n            renderIcon={User32}\n            iconDescription=\"About\"\n            tooltipPosition=\"bottom\"\n          />\n        </NavLink>\n\n        <NavLink to=\"/projects\">\n          <NavButton\n            hasIconOnly\n            renderIcon={Code32}\n            iconDescription=\"Projects\"\n            tooltipPosition=\"bottom\"\n          />\n        </NavLink>\n\n        <NavLink to=\"/work\">\n          <NavButton\n            hasIconOnly\n            renderIcon={Portfolio32}\n            iconDescription=\"Work\"\n            tooltipPosition=\"bottom\"\n          />\n        </NavLink>\n\n        <NavLink to=\"/education\">\n          <NavButton\n            hasIconOnly\n            renderIcon={Education32}\n            iconDescription=\"Education\"\n            tooltipPosition=\"bottom\"\n          />\n        </NavLink>\n\n      </NavWrapper>\n    </Container>\n  )\n}\n\nexport default MobileNav","import styled from 'styled-components';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport React from 'react';\n\nimport Sidebar from '../Sidebar';\nimport Header from '../Header/Header';\nimport MobileNav from '../MobileNav/MobileNav';\n\n\nexport const StyledContent = styled(Content)`\n  min-height: 100vh;\n  @media (max-width: 640px) {\n    margin-left: 0 !important;\n  }\n`\nconst Layout = ({ children }) => {\n    \n    return (\n      <>\n        <MobileNav />\n        <Sidebar />\n        \n        <StyledContent>\n          <Header />\n          <div>{children}</div>\n        </StyledContent>\n      </>\n    );\n  };\n  \n  export default Layout;","import styled from 'styled-components';\nimport { red, white } from '@carbon/colors';\n\nexport const SectionTitle = styled.h3`\n  margin-top: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Paragraph = styled.p`\n  white-space: pre-wrap;\n  line-height: 1.6;\n`;\n\nexport const Pill = styled.span`\n  display: inline-block;\n  margin-right: 0.75rem;\n  margin-bottom: 0.75rem;\n  padding: 0.5rem 1rem;\n  background-color: ${red[60]};\n  color: ${white};\n  border: 3px solid ${red[60]};\n  border-radius: 2px;\n  font-weight: bold;\n`;","import styled from 'styled-components'\nimport React, { useContext} from 'react';\nimport Layout from '../components/Layout/Layout';\nimport { SectionTitle, Paragraph, Pill } from '../styles';\nimport { InfoContext } from \"../contexts/infoContext\";\n\nexport const ProfileLink = styled.li`\n  margin-right: 0.5rem;\n  margin-bottom: 0.5rem;\n  display: inline-block;\n  font-size: 18px;\n`\nconst Me = () => {\n\n    const { info } = useContext(InfoContext);\n\n    return (\n        <Layout>\n            <div>\n                <SectionTitle>About Me</SectionTitle>\n                <Paragraph>{info.basics.summary}</Paragraph>\n            </div>\n\n            <div>\n                <SectionTitle>Skills</SectionTitle>\n                <div>\n                    {info.skills.map(skill => (\n                        <Pill key={skill.name}>{skill.name}</Pill>\n                    ))}\n                </div>\n            </div>\n            \n            <div>\n                <SectionTitle>Profiles</SectionTitle>\n                <ul>\n                    {info.basics.profiles.map((profile, i) => (\n                        <ProfileLink key={profile.network}>\n                            {i !== 0 && ' | '}\n                            <a href={profile.url} target=\"_blank\" rel=\"noreferrer noopener\">\n                                {profile.network}\n                            </a>\n                        </ProfileLink>\n                    ))}\n                </ul>\n            </div>\n        </Layout>\n\n    );\n};\n\nexport default Me;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Card = styled.div`\n    display: flex;\n    height: 15rem;\n    width: 25rem;\n    margin: auto;\n    margin-top: 20px;\n    flex-direction: column;\n    align-items: flex-start;\n    border: 0.75px solid #e5e5e5;\n    border-radius: 7px;\n    background-image: url(\"${props => props.path}\");\n    background-size: cover;\n    background-position: center;\n    box-shadow: 10px 10px 10px 0 rgba(0, 0, 0, .1);\n    &:hover {\n        cursor: pointer;\n    }\n    @media (max-width: 769px){\n        margin-top: 5em;\n        min-width: 353.5px;\n    }\n`;\n\nconst TitleBox = styled.div`\n    font-family: Inter, sans-serif;\n    margin-top: auto;\n    margin-bottom: 0px;\n    width: 100%;\n    height: 15%;\n    background-color: #ffffff;\n    opacity: 0.5;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    border-radius: 7px;\n`;\nconst Title = styled.div`\n    text-align: center;\n    font-weight: 500;\n    font-size: 22px;\n    padding-top: 10px;\n    color: black;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    padding: 2em;\n    flex-direction: column;\n    background-color: black;\n    opacity: 0.7;\n    height: 100%;\n`;\n\nconst TitleBack = styled.div`\n    text-align: center;\n    font-weight: 650;\n    font-size: 22px;\n    padding-bottom: 0.2em;\n    color: white;\n`;\n\nconst Commnet = styled.div`\n    text-align: center;\n    margin: auto;\n    font-family: 'Inter beta', sans-serif;\n    font-weight: 450;\n    font-size: 14px;\n    display: box;\n    line-height: 1.3;\n    height: 5em;\n`;\n\nconst SkillContainer = styled.div`\n  margin-top: 1.2rem;\n`\nconst SkillTag = styled.span`\n  display: inline-block;\n  margin-right: 0.75rem;\n  margin-bottom: 0rem;\n  padding: 0.5rem 1rem;\n  background-color: none;\n  color: white;\n  border: 1px solid white;\n  border-radius: 2px;\n  font-weight: 300;\n`;\n\nconst DemoLink = styled.a`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    border: 1px solid black;\n    width: 7em;\n    height: 80%;\n    margin: 0.2em 0.1em 0.1em;\n    &:hover {\n        cursor: pointer;\n    }\n`;\nconst Des = styled.div`\n    font-weight: 400;\n    margin: auto 0 auto;\n    color: black;\n    padding-left: 0.1em;\n`;\n\nconst Img = styled.img`\n    width: 1.5em;\n    height: 1.5em;\n    margin: auto 0 auto;\n`;\n\n\nconst ProjectCard = ({ name, image, summary, languages, libraries, githubUrl, website }) => {\n\n    const [isfront, setBack] = useState(true);\n\n\n    const handleMouseLeave = () => {\n        if (!isfront) {\n            setBack(!isfront);\n        }\n\n    }\n\n    const flipCard = () => {\n        setBack(!isfront);\n\n    }\n\n    return isfront ? (\n\n        <Card path={image} onClick={flipCard} >\n            <TitleBox>\n                <Title>{name.toUpperCase()}</Title>\n            </TitleBox>\n        </Card>\n\n    ) : (\n            <Card path={image} onClick={flipCard} onMouseLeave={handleMouseLeave}>\n                <Wrapper>\n\n                    <TitleBack>{name.toUpperCase()}</TitleBack>\n\n                    <Commnet>{summary}</Commnet>\n\n                    <SkillContainer>\n                        {[...languages, ...libraries].map((item, j) => (\n                            <SkillTag key={j}>{item}</SkillTag>\n                        ))}\n                    </SkillContainer>\n\n                </Wrapper>\n\n                <TitleBox>\n\n                    <DemoLink href={githubUrl} target=\"_blank\">\n                        <Img src=\"/images/github.svg\" alt=\"github\"></Img>\n                        <Des>GITHUB</Des>\n                    </DemoLink>\n\n                    <DemoLink href={website} target=\"_blank\">\n                        <Img src=\"/images/play.svg\" alt=\"play\"></Img>\n                        <Des>DEMO</Des>\n                    </DemoLink>\n\n                </TitleBox>\n            </Card>\n        )\n}\n\nexport default ProjectCard;","import styled from 'styled-components';\nimport React, { useContext } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport { SectionTitle } from '../styles';\nimport { InfoContext } from \"../contexts/infoContext\";\nimport ProjectCard from '../components/ProjectCard';\n\nconst Container = styled.div`\n    height: auto;\n    display: flex;\n    padding-top: 1%;\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    align-content: center;\n    z-index:10;\n`;\n\nconst Projects = () => {\n    const { info } = useContext(InfoContext);\n    \n\n    return (\n        <Layout>\n            <div>\n                <SectionTitle>Projects</SectionTitle>\n                \n                <Container>\n                    {info.projects.map((project, i) => (\n                        <ProjectCard\n                            name={project.name}\n                            image={project.images[0].resolutions.desktop.url}\n                            summary={project.summary}\n                            languages={project.languages}\n                            libraries={project.libraries}\n                            githubUrl={project.githubUrl}\n                            website={project.website}\n                            key= {i}\n                        />\n                    ))}\n                </Container>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Projects;\n\n","import styled from 'styled-components';\nimport { white } from '@carbon/colors';\nimport React, {useContext} from 'react';\nimport Layout from '../components/Layout/Layout';\nimport { SectionTitle, Paragraph } from '../styles';\nimport { InfoContext } from '../contexts/infoContext';\n\nexport const WorkItem = styled.li`\n  margin-top: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${white};\n`\n\nexport const WorkTitle = styled.h4`\n  font-weight: 700;\n  color: #FF8C00;\n`\n\nexport const JobTitle = styled.p`\n  font-weight: bold;\n  display: inline-block;\n`\nexport const JobDescription = styled.p`\n  margin-top: 0.6rem;\n`\n\nconst Work = () => {\n    const { info } = useContext(InfoContext);\n    return (\n      <Layout>\n        <div>\n          <SectionTitle>Work</SectionTitle>\n\n          <ul>\n            {info.work.map((work, i) => (\n              <WorkItem key={i}>\n                <WorkTitle>{work.position}</WorkTitle>\n\n                <div>\n                  <JobTitle>{work.company}</JobTitle> <span>{work.location}</span>\n\n                  <span> &sdot; </span>\n                  \n                  <span>\n                    {work.start.year}/{work.start.month} to {work.end.year}/{work.end.month}\n                  </span>\n                </div>\n\n                <Paragraph>\n                    {work.highlights.map((highlight, i) => (\n                        <JobDescription>- {highlight}</JobDescription>\n                    ))}\n                \n                </Paragraph>\n              </WorkItem>\n            ))}\n          </ul>\n\n        </div>\n      </Layout>\n    );\n  };\n  \n  export default Work;","import styled from 'styled-components';\nimport { white } from '@carbon/colors';\nimport React, { useContext } from 'react';\nimport Layout from '../components/Layout/Layout';\nimport { SectionTitle, Paragraph } from '../styles';\nimport { InfoContext } from '../contexts/infoContext';\n\nexport const EducationItem = styled.li`\n  margin-top: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${white};\n`\n\nexport const Institution = styled.h4`\n  font-weight: 700;\n  color: #FF8C00;\n`\n\nexport const Degree = styled.p`\n  font-weight: bold;\n  display: inline-block;\n`\n\nconst Education = () => {\n    const { info } = useContext(InfoContext);\n\n    return (\n      <Layout>\n        <div>\n          <SectionTitle>Education</SectionTitle>\n\n          <ul>\n            {info.education.map((education, i) => (\n              <EducationItem key={i}>\n                <Institution>{education.institution}</Institution>\n\n                <div>\n                  <Degree>\n                    {education.studyType}, {education.area}\n                  </Degree>{' '}\n\n                  <span> &sdot; </span>\n                  \n                  <span>\n                    {education.start.year} to {education.end.year}\n                  </span>\n                </div>\n\n                <Paragraph>{education.description.replace('\\n\\n', '\\n')}</Paragraph>\n              </EducationItem>\n            ))}\n          </ul>\n\n        </div>\n      </Layout>\n    );\n  };\n  \n  export default Education;","\nimport React from 'react';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">Loading</div>\n  );\n}\n\nexport default Loader;","import React, { useContext} from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Me from './Me';\nimport Projects from './Projects';\nimport Work from './Work';\nimport Education from './Education';\nimport { InfoContext } from '../contexts/infoContext';\nimport Loader from '../components/Loader';\n\nconst Pages = () => {\n\n    const { info } = useContext(InfoContext);\n    \n    if (!info) {\n        return <Loader />;\n    }\n\n    return (\n\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Me/>\n                </Route>\n                <Route path=\"/projects\">\n                    <Projects/>\n                </Route>\n                <Route path=\"/work\">\n                    <Work/>\n                </Route>\n                <Route path=\"/education\">\n                    <Education/>\n                </Route>\n            </Switch>\n        </HashRouter>\n\n    );\n\n};\n\nexport default Pages;","import React from 'react';\nimport Pages from './pages/Pages';\nimport InfoContextProvider from './contexts/infoContext';\n\nfunction App() {\n  \n  return (\n    <InfoContextProvider>\n      <Pages/>  \n    </InfoContextProvider>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}